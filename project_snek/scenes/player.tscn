[gd_scene load_steps=11 format=3 uid="uid://dddj0jy148j2l"]

[ext_resource type="Script" path="res://scenes/camera_2d.gd" id="1_dbdjp"]
[ext_resource type="Texture2D" uid="uid://cr3yusowhmcrh" path="res://Entety sprites/animation sprites/MC_movement.png" id="2_ylaxq"]
[ext_resource type="Texture2D" uid="uid://uahyk0j2cwb7" path="res://static sprites/Tmp_death_screen.png" id="4_tuknr"]
[ext_resource type="Script" path="res://scenes/death_screen.gd" id="5_nksik"]
[ext_resource type="Texture2D" uid="uid://blyer02jjetmb" path="res://Entety sprites/Player/Robot_MC_outline.png" id="6_lrwgo"]

[sub_resource type="GDScript" id="GDScript_isu8i"]
script/source = "extends CharacterBody2D

signal player_health_Changed
signal player_died

@onready var health_bar = $HUD/HealthBar

@export var maximum_player_health = 100 # maximum player health
@export var health = 100 # current player health
var getting_attacked = false
var alive = true # status if player is alive


###----------------- usefull general functions -------------
# in this codeblock are functions that are usefull but godot does not have, like \"wait 4 seconds\"
func wait(seconds: float) -> void:
	await get_tree().create_timer(seconds).timeout
#--------------------------------------------------------


### <movement>
@export var speed = 600.0
@export var jump_force = -600.0
@export var max_walljump = 2 # remember to set it to \"is_on_floor()\" too ( a few lines down) 
@export_range(0,1) var deceleration = 0.2
@export_range(0,1) var acceleration = 0.2
@export_range(0,1) var deceleration_on_jump_release = 0.5
var invulnerable = false
var teleport_cooldown = false # true means you CAN'T teleport
var gravity = ProjectSettings.get_setting(\"physics/2d/default_gravity\")



func _physics_process(delta):
	if not is_on_floor():
		velocity.y += gravity * delta

	if Input.is_action_just_pressed(\"button_space\") and (is_on_floor() or is_on_wall()) and max_walljump > 0:
		velocity.y = jump_force
		max_walljump -= 1

	
	if is_on_floor(): 
		max_walljump = 2
		
	if Input.is_action_just_released(\"button_space\") and velocity.y < 0:
		velocity.y *= deceleration_on_jump_release

	var direction = Input.get_axis(\"button_a\", \"button_d\")
	if direction:
		velocity.x = move_toward(velocity.x,direction * speed, speed * acceleration)
	else:
		velocity.x = move_toward(velocity.x, 0, speed * deceleration) # if you put \"delta\" instead of \"speed\" it turns into an ice level
	move_and_slide()

# </movement>

### <teleport>
	if Input.is_action_just_pressed(\"mouse_RC\") and teleport_cooldown == false:
		var dir = 0 # if you walk right or left
		teleport_cooldown = true
		if(velocity.x>0):
			dir=1  #right
		elif(velocity.x<0):
			dir=-1 #left
		else:
			return
		#print(\"move\")
		$Sprite2D.visible=false
		$Sprite2D2.visible=true  # makes player invisible inbetween teleportd
		invulnerable = true
		teleport_to(position+Vector2(500*dir,0)) # 500 = teleport lenght
		await wait(0.25)  # 0.25 seconds delay (250ms)s)	
		teleport_cooldown = true
		$Sprite2D.visible=true
		$Sprite2D2.visible=false
		invulnerable = false
		teleport_cooldown_func(2)

func teleport_cooldown_func(seconds):
	await wait(seconds)
	teleport_cooldown = false

func teleport_to(new_position: Vector2):
	# Check if moving to the new position will collide with any object
	collision_mask = 4 # Makes the player able to teleport trough enemies
	var collision = test_move(global_transform, new_position - global_position)
	 
	if collision:  # collision with mask 3
		print(\"Blocked, cannot teleport to:\", new_position)
	else:
		print(\"Teleporting to:\", new_position)
		$Sprite2D.visible = false
		$Sprite2D2.visible = true

		await wait(0.25)  # 250ms delay  #just fancy trying to make the teleport look better/otional
		
		global_position = new_position
		$Sprite2D.visible = true
		$Sprite2D2.visible = false
	collision_mask = 6 # Make the player able to collide with enemy after teleport
#</teleport>
	
###<attack and health>
func _on_enemy_rootnode_enemy_attack():
	if invulnerable == false: # for when teleporting and other immunity frames
		for i in range(10):
			take_damage(1)
			await wait(0.05)
		#health_bar.health = health
	print(\"Player took damage. Remaining: \", health,\"%\")
	

var prev_health

# manages player health
func take_damage(damage):
	player_health_Changed.emit(health, maximum_player_health)
	if alive:
		prev_health = health
		health -= damage
		health_bar.value = move_toward(health,prev_health,0.02)
		if health<=0:
			alive=false
			print(\"you dead\")
			player_died.emit()
			speed = 0
			gravity = 0
			velocity = Vector2(0,0)
			$Camera2D.position_smoothing_enabled = false
			deceleration = 1
			jump_force = 0
		
#</attack and health>
"

[sub_resource type="CapsuleShape2D" id="CapsuleShape2D_pkm1a"]
radius = 32.0
height = 216.0

[sub_resource type="StyleBoxFlat" id="StyleBoxFlat_ct4rk"]
bg_color = Color(0.00392157, 0, 0, 0.854902)

[sub_resource type="StyleBoxFlat" id="StyleBoxFlat_imami"]
bg_color = Color(0.882353, 0.156863, 0.270588, 1)

[sub_resource type="GDScript" id="GDScript_vbl6h"]
script/source = "extends ProgressBar

#func _on_character_body_2d_player_health_changed(Health, maximum_player_health):
#	Health -= 1
	#value = Health
"

[node name="CharacterBody2D" type="CharacterBody2D"]
collision_mask = 6
script = SubResource("GDScript_isu8i")
max_walljump = -2

[node name="CollisionShape2D" type="CollisionShape2D" parent="."]
position = Vector2(0, -5)
shape = SubResource("CapsuleShape2D_pkm1a")

[node name="Camera2D" type="Camera2D" parent="."]
zoom = Vector2(0.5, 0.5)
position_smoothing_enabled = true
script = ExtResource("1_dbdjp")

[node name="Sprite2D" type="Sprite2D" parent="."]
texture = ExtResource("2_ylaxq")
hframes = 3
frame = 1

[node name="death_screen" type="Sprite2D" parent="."]
visible = false
position = Vector2(0.499959, 0.5)
scale = Vector2(1.19948, 1.19907)
texture = ExtResource("4_tuknr")
script = ExtResource("5_nksik")

[node name="Sprite2D2" type="Sprite2D" parent="."]
visible = false
texture = ExtResource("6_lrwgo")

[node name="HUD" type="CanvasLayer" parent="."]

[node name="HealthBar" type="ProgressBar" parent="HUD"]
anchors_preset = -1
anchor_left = -26.913
anchor_top = 17.837
anchor_right = -13.326
anchor_bottom = 20.065
offset_left = 31005.8
offset_top = -11557.4
offset_right = 15681.6
offset_bottom = -12970.1
theme_override_styles/background = SubResource("StyleBoxFlat_ct4rk")
theme_override_styles/fill = SubResource("StyleBoxFlat_imami")
step = 0.2
value = 100.0
allow_greater = true
show_percentage = false
script = SubResource("GDScript_vbl6h")

[node name="Sprite2D3" type="Sprite2D" parent="."]
visible = false
texture = ExtResource("6_lrwgo")

[connection signal="player_died" from="." to="death_screen" method="_on_character_body_2d_player_died"]
[connection signal="player_health_Changed" from="." to="HUD/HealthBar" method="_on_character_body_2d_player_health_changed"]
