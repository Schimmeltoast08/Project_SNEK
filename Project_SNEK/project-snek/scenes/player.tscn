[gd_scene load_steps=18 format=3 uid="uid://dddj0jy148j2l"]

[ext_resource type="Script" path="res://scenes/camera_2d.gd" id="1_dbdjp"]
[ext_resource type="Texture2D" uid="uid://cr3yusowhmcrh" path="res://Entety sprites/animation sprites/MC_movement.png" id="2_ylaxq"]
[ext_resource type="Script" path="res://scenes/health_bar.gd" id="3_h4ksh"]
[ext_resource type="Texture2D" uid="uid://uahyk0j2cwb7" path="res://static sprites/Tmp_death_screen.png" id="4_tuknr"]
[ext_resource type="Script" path="res://scenes/death_screen.gd" id="5_nksik"]

[sub_resource type="GDScript" id="GDScript_isu8i"]
script/source = "extends CharacterBody2D

#SPEED
var SPEED = 600.0

# this goes into the health bar called \"Progress bar\" to indicate that it needs to update (saves recources)
signal player_health_Changed

signal player_died

# maximum player health
@export var maximum_player_health = 10

# current player health
@export var Health = 10

# status if player is alive
var alive = true


func _physics_process(delta):
	if(alive): # movement if player is alive, if he is dead then no more movement
		var direction := Input.get_vector(\"button_a\", \"button_d\", \"button_w\", \"button_s\")
		velocity = velocity.normalized()
		velocity = direction * SPEED
		move_and_slide()
	# /movement

# manages player health
func take_damage(damage):
	player_health_Changed.emit(Health, maximum_player_health)
	if alive:
		Health-=damage
		if Health<=0:
			alive=false
			print(\"you dead\")
			player_died.emit()
			

# make it so when the player gets too close to the player he takes damage (does not yet have a timer
# so it does that every second during the duration of the player being inside the range of the basic robot)
func _on_enemy_rootnode_enemy_attack():
	take_damage(1)
	print(\"Player took damage\")
	print(Health)
"

[sub_resource type="CapsuleShape2D" id="CapsuleShape2D_pkm1a"]
radius = 32.0
height = 206.0

[sub_resource type="Animation" id="Animation_fdj5p"]
length = 0.001
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("Sprite2D:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [1]
}

[sub_resource type="Animation" id="Animation_632s8"]
resource_name = "down"
length = 0.8
loop_mode = 1
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("Sprite2D:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 0.2, 0.333333, 0.4),
"transitions": PackedFloat32Array(1, 1, 1, 1),
"update": 1,
"values": [1, 1, 1, 2]
}

[sub_resource type="Animation" id="Animation_jxst4"]
resource_name = "down_animation"

[sub_resource type="AnimationLibrary" id="AnimationLibrary_nnkji"]
_data = {
"RESET": SubResource("Animation_fdj5p"),
"down": SubResource("Animation_632s8"),
"down_animation": SubResource("Animation_jxst4")
}

[sub_resource type="AnimationNodeAnimation" id="AnimationNodeAnimation_otnyh"]
animation = &"down"

[sub_resource type="AnimationNodeAnimation" id="AnimationNodeAnimation_mk2vb"]
animation = &"down_animation"

[sub_resource type="AnimationNodeAnimation" id="AnimationNodeAnimation_juyjf"]
animation = &"down_animation"

[sub_resource type="AnimationNodeAnimation" id="AnimationNodeAnimation_2u245"]
animation = &"down_animation"

[sub_resource type="AnimationNodeBlendSpace2D" id="AnimationNodeBlendSpace2D_5e5pq"]
blend_point_0/node = SubResource("AnimationNodeAnimation_otnyh")
blend_point_0/pos = Vector2(0, -0.9)
blend_point_1/node = SubResource("AnimationNodeAnimation_mk2vb")
blend_point_1/pos = Vector2(-1, 0)
blend_point_2/node = SubResource("AnimationNodeAnimation_juyjf")
blend_point_2/pos = Vector2(0, 0.9)
blend_point_3/node = SubResource("AnimationNodeAnimation_2u245")
blend_point_3/pos = Vector2(1, 0)
blend_mode = 1

[sub_resource type="AnimationNodeStateMachine" id="AnimationNodeStateMachine_0cm0u"]
states/Walk_down/node = SubResource("AnimationNodeBlendSpace2D_5e5pq")
states/Walk_down/position = Vector2(406, 82)
graph_offset = Vector2(-156, -5)

[node name="CharacterBody2D" type="CharacterBody2D"]
script = SubResource("GDScript_isu8i")

[node name="CollisionShape2D" type="CollisionShape2D" parent="."]
position = Vector2(0, -9)
shape = SubResource("CapsuleShape2D_pkm1a")

[node name="Camera2D" type="Camera2D" parent="."]
zoom = Vector2(0.5, 0.5)
position_smoothing_enabled = true
script = ExtResource("1_dbdjp")

[node name="Sprite2D" type="Sprite2D" parent="."]
texture = ExtResource("2_ylaxq")
hframes = 3
frame = 1

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
libraries = {
"": SubResource("AnimationLibrary_nnkji")
}

[node name="AnimationTree" type="AnimationTree" parent="."]
tree_root = SubResource("AnimationNodeStateMachine_0cm0u")
anim_player = NodePath("../AnimationPlayer")
parameters/Walk_down/blend_position = Vector2(0.214626, 0.123894)

[node name="ProgressBar" type="ProgressBar" parent="."]
anchors_preset = -1
anchor_top = -0.218
anchor_bottom = -0.218
offset_left = -75.0
offset_top = -155.0
offset_right = 75.0
offset_bottom = -128.0
max_value = 10.0
step = 1.0
value = 5.0
show_percentage = false
script = ExtResource("3_h4ksh")

[node name="death_screen" type="Sprite2D" parent="."]
position = Vector2(0.499959, 0.5)
scale = Vector2(1.19948, 1.19907)
texture = ExtResource("4_tuknr")
script = ExtResource("5_nksik")

[connection signal="player_died" from="." to="death_screen" method="_on_character_body_2d_player_died"]
[connection signal="player_health_Changed" from="." to="ProgressBar" method="_on_character_body_2d_player_health_changed"]
